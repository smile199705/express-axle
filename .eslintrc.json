{
    "env": {
        "node": true,
        "es6": true
    },
    "root": true, // 此项是用来告诉eslint找当前配置文件不能往父级查找
    "extends": "eslint:recommended",
    "overrides": [],
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "ignorePatterns": [".eslintrc.json"], // 忽略规则的文件
    "rules": {
      // js
      // 关键字的前后空格
      "keyword-spacing": [
        "error", { "before": true, "after": true }],
      // 禁止混用tab和空格
      "no-mixed-spaces-and-tabs": ["error", "smart-tabs"],
      // 强制不使用分号
      "semi": [
        "error", "never"
      ],
      "indent": ["error", "tab"],
//      "no-unused-vars":1, // 禁止出现未使用过的变量
      "no-useless-return":"error", // 禁止没有任何内容的return;
      // 分号前后空格
      "semi-spacing": [
        "error", { "before": false, "after": true }],
      // 禁止重复定义类的成员， 编译阶段就会报错了
      "no-dupe-class-members": "warn",
      // 禁止重复导入模块
      "no-duplicate-imports": "off",
      // 禁止在类之外的地方使用 this
      "no-invalid-this": "off",
      // 禁止 throw 字面量，必须 throw 一个 Error 对象
      "no-throw-literal": "warn",
      // 禁止在定义变量之前就使用它
      "no-use-before-define": "error",
      // 对象字面量中冒号的前后空格
      "key-spacing": ["error", { "beforeColon": false, "afterColon": true }],
      // 引号类型 `` "" ''
      "quotes": ["error", "single"],
      // 逗号前后的空格
      "comma-spacing": ["error", { "before": false, "after": true }],
      // 必须使用全等
      "eqeqeq": "error",
      // switch必须写default case
      "default-case": "error",
      // 不能用多余的空格
      "no-multi-spaces": "error",
      // 一行结束后面不要有空格
      "no-trailing-spaces": "error",
      // 对象字面量项尾不能有逗号
      "comma-dangle": [2, "never"],
      "strict": 2, // 使用严格模式
      "arrow-spacing": [2, {
        "before": true,
        "after": true
      }],//箭头函数中的箭头前后加空格
      "block-spacing": [2, "always"],//花括号内前后加空格
      "brace-style": ["error", "1tbs"], // 强制在代码块中使用一致的大括号风格
      "object-curly-spacing": ["error","always"], // 对象括号内保持前后有空格

      "space-before-function-paren": ["error", "always"], // 强制在 function的左括号之前使用一致的空格

//      "space-after-function-paren": ["error", "always"], // 强制在 function的左括号之前使用一致的空格

      "space-unary-ops": ["error", { "words": true, "nonwords": false }], // 强制在一元操作符前后使用一致的空格

      // "spaced-comment": ["error", "always"], // 强制在注释中 // 或 /* 使用一致的空格

      "space-infix-ops": "warn", // 要求操作符周围有空格

      "no-implicit-coercion": "error", // 禁止出现空函数.如果一个函数包含了一条注释，它将不会被认为有问题。

      "no-loop-func":"error", // 禁止在循环中出现 function 声明和表达式。

      "operator-linebreak": ["error", "after"], // 强制操作符使用一致的换行符

      "max-nested-callbacks": ["error", 3], // 强制回调函数最大嵌套深度

      "max-depth": ["error", 4], // 强制可嵌套的块的最大深度

      "linebreak-style": ["error", "unix"], // 换行符风格

      "max-params": ["error", 6], // 强制函数定义中最多允许的参数数量

      "no-empty-pattern": ["error"], // 禁止使用空解构模式

      "no-useless-escape": ["error"], // 禁用不必要的转义字符

      "no-unsafe-negation": ["error"], // 禁止对关系运算符的左操作数使用否定操作符

//       "no-magic-numbers": ["error", { "ignoreArrayIndexes": true }], // 禁用魔术数字

      "no-multiple-empty-lines": ["error", {"max": 2}], // 空行不能够超过2行。

      "no-shadow-restricted-names": "error", // 禁止对一些关键字或者保留字进行赋值操作，比如NaN、Infinity、undefined、eval、arguments等

      "no-undef-init": "error", // 禁止把undefined赋值给一个变量。

      "lines-around-comment": ["error", { "beforeBlockComment": true }], // 要求在注释周围有空行 ( 要求在块级注释之前有一空行)

      "no-empty": ["error", { "allowEmptyCatch": true }], // 禁止出现空语句块

      "no-cond-assign": ["error", "always"], // 禁止条件表达式中出现赋值操作符

      // "multiline-comment-style": ["error", "starred-block"], // 强制对多行注释使用特定风格

      "multiline-ternary": ["error", "always-multiline"], // 要求或禁止在三元操作数中间换行

      "new-cap": ["error", { "capIsNew": false }], // 要求构造函数首字母大写

      "eol-last": ["error", "always"] // 要求或禁止文件末尾存在空行

    }
}
